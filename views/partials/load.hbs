<div id="accordion">
  <h3>Open url</h3>
  <div>
    <form id="open-remote-form">
      <label for="open-remote-url">Url</label><input type="text" id="open-remote-url" required value="releases.ubuntu.com/14.04.3/ubuntu-14.04.3-desktop-amd64.iso">
      <input type="submit" value="Download">
      <input type="button" id="open-remote-stop" value="Stop" style="display: none;">
    </form>

    <div class="progressbar" id="progressbar-url"><div class="progress-label">Downloading...</div></div>
  </div>

  <h3>Open local folder</h3>
  <div>
    <form id="">
      <label>Select folder<input type="file" id="open-local-folder" nwdirectory></label>
    </form>
  </div>
  
  <h3>Open local .elcx file</h3>
  <div>
    <form id="">
      <label>Select file<input type="file" id="open-local-archive" accept=".elcx"></label>
    </form>
  </div>
</div>

<script>
$("#accordion").accordion();
var $openRemoteUrl = $('#open-remote-url');
var $openRemoteStop = $('#open-remote-stop');
var $progressbarUrl = $('#progressbar-url');
var $progressLabelUrl = $progressbarUrl.find('.progress-label');
var totalDownload;

var addhttp = function(url) {
  if (!/^(f|ht)tps?:\/\//i.test(url)) {
    url = "http://" + url;
  }
  return url;
};

var remoteStart = function() {
  var url = addhttp($openRemoteUrl.val());
  if (url !== '') {
    sendMessage('url', { url: url });
  }
  $openRemoteStop.show();
  $progressbarUrl.progressbar('value', false)
  $progressbarUrl.show();
};

var remoteStop = function() {
  $progressLabelUrl.text('Error!');
  $openRemoteStop.hide();
  $progressbarUrl.hide();
};

var remoteUpdated = function(val) {
  $progressbarUrl.progressbar('value', val);
};

var remoteStarted = function(val) {
  totalDownload = val;
};

// local folder
$('#open-local-folder').on('change', function() {
  var path = this.files[0].path;
  if (path !== '') {
    sendMessage('local-folder', { path: path });
    // reset its value so it can catch the next event in case we select the same previous value
    this.value = '';
  }
});

// local archive
$('#open-local-archive').on('change', function() {
  var path = this.files[0].path;
  if (path !== '') {
    sendMessage('local-archive', { path: path });
    // reset its value so it can catch the next event in case we select the same previous value
    this.value = '';
  }
});

// remote url
$('#open-remote-form').on('submit', function(e) {
  e.preventDefault();
  remoteStart();
});
$openRemoteStop.on('click', function() {
  sendMessage('interrupt');
});
$progressbarUrl.progressbar({
  value: false,
  change: function() {
    if ($progressbarUrl.progressbar('value') === false) {
      $progressLabelUrl.text('Downloading...');
    }
    else {
      $progressLabelUrl.text($progressbarUrl.progressbar('value') + '% of ' + totalDownload);
    }
  },
  complete: function() {
    $progressLabelUrl.text('Complete!');
  }
});


var loadReceiveMessage = receiveMessage;
receiveMessage = function(msg) {
  loadReceiveMessage(msg);

  if (msg.type === 'progress-url') {
    if (msg.message === -1) {
      remoteStop();
    }
    else {
      remoteUpdated(msg.message);
    }
  }

  if (msg.type === 'download-started') {
    remoteStarted(msg.message);
  }
};
</script>